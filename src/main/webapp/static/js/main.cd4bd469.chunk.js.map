{"version":3,"sources":["utils.js","components/LoginForm.js","components/FoodList.js","components/MyCart.js","components/SignupForm.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","username","password","loginUrl","fetch","method","headers","credentials","then","response","status","Error","signup","data","body","JSON","stringify","LoginForm","state","loading","onFinish","setState","message","success","props","onSuccess","catch","err","error","finally","name","style","width","margin","this","Item","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","type","htmlType","Component","Option","Select","AddToCartButton","itemId","useState","setLoading","title","icon","PlusOutlined","onClick","addItemToCart","FoodList","curRest","setCurRest","restaurants","setRestaurants","foodData","setFoodData","loadingRest","setLoadingRest","useEffect","json","resData","console","log","restId","Data","value","onSelect","onChange","map","item","id","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","extra","src","imageUrl","alt","height","display","price","Text","Typography","MyCart","cartVisible","setCartVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","shape","onClose","visible","footer","justifyContent","strong","totalPrice","toFixed","marginRight","disabled","orderItemList","length","itemLayout","Meta","menuItem","description","SignupForm","displayModal","handleCancel","signupOnClick","render","onCancel","destroyOnClose","initialValues","remember","preserve","Header","Layout","Content","Title","App","authed","setAuthed","className","level","color","lineHeight","marginBottom","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd4bd469.chunk.js","sourcesContent":["// login api\nexport const login = credential => {\n    // credential{ {username: value, password: value}\n    // request opt: method, url, data\n    const {username, password } = credential;\n    const loginUrl = `/login?username=${username}&password=${password}`;\n    return fetch(loginUrl, {\n        method: \"POST\",\n        headers: {\n            \"content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n        }).then ( (response) => {\n            if (response.status<200 || response.status >= 300) {\n                throw Error(\"Fail to log in\");\n            }\n        });\n\n    }\nexport const signup = (data) => {\n    const signupUrl = \"/signup\";\n\n    return fetch(signupUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to sign up\");\n        }\n    });\n};\n\nexport const getMenus = (restId) => {\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to get menus\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const getRestaurants = () => {\n    return fetch(\"/restaurants\").then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to get restaurants\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const getCart = () => {\n    return fetch(\"/cart\").then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to get shopping cart data\");\n        }\n\n        return response.json();\n    });\n};\n\nexport const checkout = () => {\n    return fetch(\"/checkout\").then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to checkout\");\n        }\n    });\n};\n\nexport const addItemToCart = (itemId) => {\n    return fetch(`/order/${itemId}`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300) {\n            throw Error(\"Fail to add menu item to shopping cart\");\n        }\n    });\n};\n\n","import React, {Component} from 'react';\nimport { Form, Input, Button, message} from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { login} from \"../utils\";\n\nclass LoginForm extends Component {\n    state = {\n        loading: false\n    }\n    onFinish = (data) => {\n\n        this.setState({\n            loading: true,\n        });\n        login(data)\n            .then(() => {\n                message.success('Login Successful');\n                this.props.onSuccess();\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                this.setState({\n                    loading: false,\n                });\n\n            });\n    };\n\n    render() {\n        return (\n            <Form\n                name=\"normal_login\"\n                style = {{\n                    width: 300,\n                    margin: \"auto\",\n                }}\n\n                onFinish={this.onFinish}\n            >\n                <Form.Item\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Username!',\n                        },\n                    ]}\n                >\n                    <Input prefix={<UserOutlined />} placeholder=\"Username\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Password!',\n                        },\n                    ]}\n                >\n                    <Input.Password\n                        prefix={<LockOutlined />}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" loading={this.state.loading}>\n\n                        Log in\n                    </Button>\n\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nexport default LoginForm;","import React, {useEffect, useState} from 'react'\nimport {Select, List, Card, Tooltip, Button, message} from 'antd';\nimport {getRestaurants, getMenus, addItemToCart} from \"../utils\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n//import [foodData, setFoodData] = useState([]);\n\nconst { Option} = Select;\nconst AddToCartButton = ({ itemId}) => {\n\n    const [loading, setLoading] = useState(false);\n    const addToCart = () => {\n        setLoading(false);\n        addItemToCart(itemId)\n            .then( () => {\n                message.success(\"Successfully add item\")\n            })\n            .catch( err => {\n                message.error(err.message)\n            })\n            .finally(  () => {\n                setLoading(false);\n        })\n    }\n\n    return (\n        <Tooltip title = \"Add to shopping cart\">\n            <Button icon = {<PlusOutlined />}\n                    type = \"primary\"\n                    loading = {loading}\n                    onClick = {addToCart}\n            />\n        </Tooltip>\n    )\n\n}\n\nconst FoodList= () => {\n    const [loading, setLoading] = useState(false);\n    const [curRest, setCurRest] = useState();\n    const [restaurants, setRestaurants] = useState([]);\n    const [foodData, setFoodData] = useState([]);\n    const [loadingRest, setLoadingRest] = useState(false);\n\n    useEffect( () => {\n        //\n        setLoadingRest(true);\n        getRestaurants()\n            .then( resData => {\n                console.log('res -> ', resData)\n                setRestaurants(resData);\n            })\n            .catch( err => {\n                console.log(err.message);\n            })\n            .finally( () => {\n                setLoadingRest(false);\n            })\n    }, []);\n    useEffect( () => {\n        // set loading status -> true\n        // get menu from the server\n        // case1: success, setState\n        if(!curRest) return;\n        setLoading(true);\n        getMenus(curRest)\n            .then(Data => {\n                console.log('menu ->', Data);\n                setFoodData(Data);\n            })\n            .catch( err => {\n                console.log(err.message);\n            })\n            .finally( () => {\n                setLoading(false);\n            })\n\n    }, [curRest])\n\n        return (\n            <div>\n                <Select value = {curRest}\n                        placeholder = \"Select a restaurant\"\n                        style= {{ width: 300}}\n                    onSelect = { value => setCurRest(value)}\n\n                        loading={loadingRest}\n\n                        onChange={() => {}}\n\n                >\n\n                    {\n                        restaurants.map (item => {\n                            console.log(item)\n                            return <Option key={item.id} value={item.id} > {item.name}</Option>\n                        })\n                    }\n                </Select>\n                {\n                    curRest\n                    &&\n                        <List\n                            style={{ marginTop: 20 }}\n                            loading={loading}\n                            grid={{\n                                gutter: 16,\n                                xs: 1,\n                                sm: 2,\n                                md: 4,\n                                lg: 4,\n                                xl: 3,\n                                xxl: 3,\n                            }}\n                            dataSource = {foodData}\n                            renderItem = { item => (\n                                <List.Item>\n                                    <Card title = {item.name}\n                                          extra={< AddToCartButton itemId = {item.id} />}\n                                          >\n                                        <img src={item.imageUrl}\n                                             alt = {item.name}\n                                             style = {{height: \"auto\",\n                                                 width: \"100%\",\n                                                 display: \"block\"\n                                             }}\n                                        />\n                                        { `price: ${item.price}`}\n                                    </Card>\n                                </List.Item>\n\n                                )}\n\n                        />\n                }\n\n            </div>\n       )\n}\n\nexport default FoodList;","import React from 'react';\n\nimport { Button, Drawer, List, message, Typography } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { checkout, getCart } from \"../utils\";\n\nconst { Text } = Typography;\n\nconst MyCart = () => {\n    const [cartVisible, setCartVisible] = useState(false);\n    const [cartData, setCartData] = useState();\n    const [loading, setLoading] = useState(false);\n    const [checking, setChecking] = useState(false);\n\n    useEffect(() => {\n        if (!cartVisible) {\n            return;\n        }\n\n        setLoading(true);\n        getCart()\n            .then((data) => {\n                setCartData(data);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [cartVisible]);\n\n    const onCheckOut = () => {\n        setChecking(true);\n        checkout()\n            .then(() => {\n                message.success(\"Successfully checkout\");\n                setCartVisible(false);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setChecking(false);\n            });\n    };\n\n    const onCloseDrawer = () => {\n        setCartVisible(false);\n    };\n\n    const onOpenDrawer = () => {\n        setCartVisible(true);\n    };\n\n    return (\n        <>\n            <Button type=\"primary\" shape=\"round\" onClick={onOpenDrawer}>\n                Cart\n            </Button>\n            <Drawer\n                title=\"My Shopping Cart\"\n                onClose={onCloseDrawer}\n                visible={cartVisible}\n                width={520}\n                footer={\n                    <div\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                        }}\n                    >\n                        <Text strong={true}>{`Total price: $${cartData?.totalPrice.toFixed(2)}`}</Text>\n                        <div>\n                            <Button onClick={onCloseDrawer} style={{ marginRight: 8 }}>\n                                Cancel\n                            </Button>\n                            <Button\n                                onClick={onCheckOut}\n                                type=\"primary\"\n                                loading={checking}\n                                disabled={loading || cartData?.orderItemList.length === 0}\n                            >\n                                Checkout\n                            </Button>\n                        </div>\n                    </div>\n                }\n            >\n                <List\n                    loading={loading}\n                    itemLayout=\"horizontal\"\n                    dataSource={cartData?.orderItemList}\n                    renderItem={(item) => (\n                        <List.Item>\n                            <List.Item.Meta\n                                title={item.menuItem.name}\n                                description={`$${item.price}`}\n                            />\n                        </List.Item>\n                    )}\n                />\n            </Drawer>\n        </>\n    );\n};\n\nexport default MyCart;\n\n\n","import React, {Component} from 'react';\n\nimport { Button, Form, Input, message, Modal } from \"antd\";\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { signup } from \"../utils\";\n\nclass SignupForm extends Component {\n    state = {\n        displayModal: false,\n    };\n\n    handleCancel = () => {\n        this.setState({\n            displayModal: false,\n        });\n    };\n\n    signupOnClick = () => {\n        this.setState({\n            displayModal: true,\n        });\n    };\n\n    onFinish = (data) => {\n        signup(data)\n            .then(() => {\n                this.setState({\n                    displayModal: false,\n                });\n                message.success(`Successfully signed up`);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            });\n    };\n\n    render = () => {\n        return (\n            <>\n                <Button shape=\"round\" type=\"primary\" onClick={this.signupOnClick}>\n                    Register\n                </Button>\n                <Modal\n                    title=\"Register\"\n                    visible={this.state.displayModal}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                    destroyOnClose={true}\n                >\n                    <Form\n                        name=\"normal_register\"\n                        initialValues={{ remember: true }}\n                        onFinish={this.onFinish}\n                        preserve={false}\n                    >\n                        <Form.Item\n                            name=\"email\"\n                            rules={[{ required: true, message: \"Please input your email!\" }]}\n                        >\n                            <Input prefix={<UserOutlined />} placeholder=\"Email\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            rules={[\n                                { required: true, message: \"Please input your password!\" },\n                            ]}\n                        >\n                            <Input prefix={<LockOutlined />} placeholder=\"Password\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"firstName\"\n                            rules={[\n                                { required: true, message: \"Please input your first name!\" },\n                            ]}\n                        >\n                            <Input placeholder=\"firstname\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"lastName\"\n                            rules={[\n                                { required: true, message: \"Please input your last name!\" },\n                            ]}\n                        >\n\n                            <Input placeholder=\"lastname\" />\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Register\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </>\n        );\n    };\n}\n\n\n\nexport default SignupForm;","import React, {useState} from 'react'\nimport {Layout, Typography} from \"antd\"\nimport LoginForm from \"./components/LoginForm\";\nimport FoodList from \"./components/FoodList\";\nimport MyCart from \"./components/MyCart\";\nimport SignupForm from \"./components/SignupForm\";\nimport './App.css';\n\nconst {Header, Content} = Layout;\nconst {Title} = Typography;\n\nfunction App() {\n    const [authed, setAuthed] = useState(false);\n  return (\n      <Layout style={{ height:\"100vh\" }}>\n        <Header>\n            <div className=\"header\">\n                <Title level = {2}\n                    style = {{ color: \"white\", lineHeight: \"inherit\", marginBottom: 0}}\n                    >Lai Food\n                </Title>\n                <div>{authed ? <MyCart /> : <SignupForm />}</div>\n            </div>\n        </Header>\n        <Content style={{\n          padding: \"50px\",\n          maxHeight: \"calc(100% -64px)\",\n          overflowY: \"auto\",\n        }}>\n            {\n                authed? <FoodList /> :\n                    <LoginForm\n                        onSuccess={() => setAuthed(true)}/>\n            }\n\n\n        </Content>\n\n      </Layout>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}